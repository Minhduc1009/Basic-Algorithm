//Cho số nguyên n, hãy tính tổng các số nguyên tố nhỏ hơn hoặc bằng n

// cach 1
	public static boolean isPrime(int n) { // check xem n co phai so nguyen to hay khong
		if(n <= 1) return false;
		for (int i = 2; i <= Math.sqrt(n) ; i++) {
			if(n % i == 0){
			return false;
		}
	}
		return true;
	}
	public static int sumIsNumber(int n) { // tinh tong
		int sum = 0;
		for(int i = 2; i <= n;i++) {
			if(isPrime(i)) sum += i;
		}
			return sum%22082018;
	}
  
  // cach 2
  Scanner sc = new Scanner(System.in);
		System.out.print("nhap n: ");
		int n = sc.nextInt();
		boolean[] check = new boolean[n+1];
    
    // su dung phuong phap eratosthenes
		for(int i = 2; i <= n; i++) {
			check[i] = true; // cho cac phan tu trog mang la true
		}
    
		for(int i = 2; i <= Math.sqrt(n);i++) {
			if(check[i]) {
				for(int j = 2 * i; j <= n; j += i) {
					check[j] = false; // cho cac so nay la false
				}
			}
		}
    
    // xuat ra man hinh
    int sum = 0;
		for (int j = 2; j <= n; j++) {
			if(check[j]) {
				System.out.print(j+" "); // xuat ra cac so true
				sum += j; // tong
			}
		}
		System.out.println();
		System.out.println(sum); // xuat tong
		
